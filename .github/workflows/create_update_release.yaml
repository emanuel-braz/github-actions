name: Create or Update Release
run-name: Action started by ${{ github.actor }}

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag of the release.'
        required: true
        type: string
      name:
        description: 'Name of the release'
        required: true
        type: string
        default: 'Release'
      body:
        description: 'Body of the release'
        required: false
        type: string
      target:
        description: 'Target of the release (branch, commit, tag)'
        required: false
        type: string
      pre_release:
        description: 'Pre Release'
        default: true
        type: boolean
      draft:
        description: 'Draft'
        required: true
        default: false
        type: boolean
      force_update_published_release:
        description: "Force update published release if tag already exists."
        required: false
        default: false
        type: boolean
      generate_release_notes:
        description: 'Generate release notes'
        required: false
        default: true
        type: boolean
      use_latest_pre_release:
        description: 'Get latest pre-release and update release.'
        required: false
        default: false
        type: boolean
      verbose:
        description: 'Enable verbose logging.'
        required: false
        default: true
        type: boolean
jobs:
  print-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: job summary
        run: |
          echo "### inputs" >> $GITHUB_STEP_SUMMARY
          echo "tag: ${{ github.event.inputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "name: ${{ github.event.inputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "body: ${{ github.event.inputs.body }}" >> $GITHUB_STEP_SUMMARY
          echo "pre_release: ${{ github.event.inputs.pre_release }}" >> $GITHUB_STEP_SUMMARY
          echo "draft: ${{ github.event.inputs.draft }}" >> $GITHUB_STEP_SUMMARY
          echo "force_update_published_release: ${{ github.event.inputs.force_update_published_release }}" >> $GITHUB_STEP_SUMMARY
          echo "generate_release_notes: ${{ github.event.inputs.generate_release_notes }}" >> $GITHUB_STEP_SUMMARY
          echo "verbose: ${{ github.event.inputs.verbose }}" >> $GITHUB_STEP_SUMMARY
          echo "###" >> $GITHUB_STEP_SUMMARY

  release:
    needs: print-inputs
    permissions:
      contents: write
    runs-on: ubuntu-latest
    name: A job to release a new version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release Action
        uses: ./create-update-release
        with:
          name: ${{ github.event.inputs.name }}
          body: ${{ github.event.inputs.body }}
          tag: ${{ github.event.inputs.tag }}
          draft: ${{ github.event.inputs.draft }}
          token: ${{ secrets.GITHUB_TOKEN }}
          pre_release: ${{ github.event.inputs.pre_release }}
          verbose: ${{ github.event.inputs.verbose }}
          force_update_published_release: ${{ github.event.inputs.force_update_published_release }}
          target: ${{ github.event.inputs.target }}
          generate_release_notes: ${{ github.event.inputs.generate_release_notes }}
          use_latest_pre_release: ${{ github.event.inputs.use_latest_pre_release }}

