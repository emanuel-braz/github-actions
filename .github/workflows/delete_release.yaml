name: Delete a Release
run-name: Action started by ${{ github.actor }}

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag of the release.'
        required: false
        type: string
      use_latest_pre_release:
        description: 'Use latest pre-release to delete release.'
        required: false
        default: false
        type: boolean
      use_latest_published_release:
        description: 'Use latest published release to delete release.'
        required: false
        default: false
        type: boolean
      use_latest_draft:
        description: 'Use latest draft release to delete release.'
        required: false
        default: false
        type: boolean
      verbose:
        description: 'Enable verbose logging.'
        required: false
        default: true
        type: boolean
jobs:
  print-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: job summary
        run: |
          echo "### inputs" >> $GITHUB_STEP_SUMMARY
          echo "tag: ${{ github.event.inputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "use_latest_pre_release: ${{ github.event.inputs.use_latest_pre_release }}" >> $GITHUB_STEP_SUMMARY
          echo "use_latest_published_release: ${{ github.event.inputs.use_latest_published_release }}" >> $GITHUB_STEP_SUMMARY
          echo "use_latest_draft: ${{ github.event.inputs.use_latest_draft }}" >> $GITHUB_STEP_SUMMARY
          echo "verbose: ${{ github.event.inputs.verbose }}" >> $GITHUB_STEP_SUMMARY
          echo "###" >> $GITHUB_STEP_SUMMARY

  release:
    needs: print-inputs
    runs-on: ubuntu-latest
    name: A job to delete a release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Delete Release Action
        uses: ./delete_release
        with:
          tag: ${{ github.event.inputs.tag }}
          use_latest_pre_release: ${{ github.event.inputs.use_latest_pre_release }}
          use_latest_published_release: ${{ github.event.inputs.use_latest_published_release }}
          use_latest_draft: ${{ github.event.inputs.use_latest_draft }}
          verbose: ${{ github.event.inputs.verbose }}
          token: ${{ secrets.GITHUB_TOKEN }}
